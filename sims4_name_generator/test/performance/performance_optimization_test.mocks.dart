// Mocks generated by Mockito 5.4.6 from annotations
// in sims4_name_generator/test/performance/performance_optimization_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sims4_name_generator/models/character_profile.dart' as _i8;
import 'package:sims4_name_generator/models/enums.dart' as _i5;
import 'package:sims4_name_generator/models/name.dart' as _i4;
import 'package:sims4_name_generator/models/trait.dart' as _i6;
import 'package:sims4_name_generator/services/optimized_data_service.dart'
    as _i2;
import 'package:sims4_name_generator/services/optimized_storage_service.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [OptimizedDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOptimizedDataService extends _i1.Mock
    implements _i2.OptimizedDataService {
  MockOptimizedDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Name>> loadNames(
    _i5.Region? region,
    _i5.Gender? gender,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#loadNames, [region, gender]),
            returnValue: _i3.Future<List<_i4.Name>>.value(<_i4.Name>[]),
          )
          as _i3.Future<List<_i4.Name>>);

  @override
  _i3.Future<List<_i6.Trait>> loadTraits() =>
      (super.noSuchMethod(
            Invocation.method(#loadTraits, []),
            returnValue: _i3.Future<List<_i6.Trait>>.value(<_i6.Trait>[]),
          )
          as _i3.Future<List<_i6.Trait>>);

  @override
  void clearCache() => super.noSuchMethod(
    Invocation.method(#clearCache, []),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> getCacheStats() =>
      (super.noSuchMethod(
            Invocation.method(#getCacheStats, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i3.Future<void> preloadCommonData() =>
      (super.noSuchMethod(
            Invocation.method(#preloadCommonData, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [OptimizedStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOptimizedStorageService extends _i1.Mock
    implements _i7.OptimizedStorageService {
  MockOptimizedStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveCharacter(_i8.CharacterProfile? character) =>
      (super.noSuchMethod(
            Invocation.method(#saveCharacter, [character]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i8.CharacterProfile>> getSavedCharacters({
    int? page = 0,
    int? pageSize = 20,
    String? searchQuery,
    String? regionFilter,
    String? genderFilter,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedCharacters, [], {
              #page: page,
              #pageSize: pageSize,
              #searchQuery: searchQuery,
              #regionFilter: regionFilter,
              #genderFilter: genderFilter,
            }),
            returnValue: _i3.Future<List<_i8.CharacterProfile>>.value(
              <_i8.CharacterProfile>[],
            ),
          )
          as _i3.Future<List<_i8.CharacterProfile>>);

  @override
  _i3.Future<int> getSavedCharactersCount({
    String? searchQuery,
    String? regionFilter,
    String? genderFilter,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedCharactersCount, [], {
              #searchQuery: searchQuery,
              #regionFilter: regionFilter,
              #genderFilter: genderFilter,
            }),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<void> deleteSavedCharacter(_i8.CharacterProfile? character) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSavedCharacter, [character]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> addToFavorites(_i8.CharacterProfile? character) =>
      (super.noSuchMethod(
            Invocation.method(#addToFavorites, [character]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeFromFavorites(_i8.CharacterProfile? character) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromFavorites, [character]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i8.CharacterProfile>> getFavoriteCharacters({
    int? page = 0,
    int? pageSize = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteCharacters, [], {
              #page: page,
              #pageSize: pageSize,
            }),
            returnValue: _i3.Future<List<_i8.CharacterProfile>>.value(
              <_i8.CharacterProfile>[],
            ),
          )
          as _i3.Future<List<_i8.CharacterProfile>>);

  @override
  _i3.Future<List<_i8.CharacterProfile>> getCharacterHistory({
    int? page = 0,
    int? pageSize = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCharacterHistory, [], {
              #page: page,
              #pageSize: pageSize,
            }),
            returnValue: _i3.Future<List<_i8.CharacterProfile>>.value(
              <_i8.CharacterProfile>[],
            ),
          )
          as _i3.Future<List<_i8.CharacterProfile>>);

  @override
  _i3.Future<void> addToHistory(_i8.CharacterProfile? character) =>
      (super.noSuchMethod(
            Invocation.method(#addToHistory, [character]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void clearCache() => super.noSuchMethod(
    Invocation.method(#clearCache, []),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<Map<String, dynamic>> getStorageStats() =>
      (super.noSuchMethod(
            Invocation.method(#getStorageStats, []),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> optimizeStorage() =>
      (super.noSuchMethod(
            Invocation.method(#optimizeStorage, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
